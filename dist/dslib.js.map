{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4ebbb1b64d16cebea077","webpack:///./src/LinkedList.js","webpack:///./src/index.js","webpack:///./src/common/LinkedListNode.js","webpack:///./src/common/DsNode.js","webpack:///./src/QueueList.js","webpack:///./src/StackList.js","webpack:///./src/HashSet.js"],"names":["LinkedList","_start","_last","_length","_LinkedList","itemValue","newNode","data","next","index","Error","addItem","addItemAtStart","currentNode","currentIndex","nextNode","getLastItem","getFirstItem","removeItemAtIndex","removeFirstItem","deleteNode","value","callback","length","listArray","map","push","QueueList","StackList","Set","LinkedListNode","Node","list","item","isEmpty","toArray","popElement","removeLastItem","set","add","element","undefined","JSON","stringify","testSet","remove","contains","setArray","i","iConverted","Number","String","Boolean","parse"],"mappings":"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","file":"dslib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DsLib\"] = factory();\n\telse\n\t\troot[\"DsLib\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4ebbb1b64d16cebea077","import { LinkedListNode } from './common/LinkedListNode';\r\n/**\r\n * Wraps up _LinkedList as LinkedList class\r\n * Provides private members to _LinkedList Class\r\n * \r\n * @class LinkedList\r\n */\r\nexport const LinkedList = (function () {\r\n  // Private members\r\n  let _start;\r\n  let _last;\r\n  let _length;\r\n\r\n  /**\r\n   * \r\n   * \r\n   * @class _LinkedList\r\n   */\r\n  class _LinkedList {\r\n    /**\r\n     * Creates an instance of _LinkedList.\r\n     * @memberof _LinkedList\r\n     */\r\n    constructor() {\r\n      _start = null;\r\n      _last = null;\r\n      _length = 0;\r\n    }\r\n\r\n    /**\r\n     * The length of the linked list\r\n     * \r\n     * @readonly\r\n     * @memberof _LinkedList\r\n     */\r\n    get length() {\r\n      return _length;\r\n    }\r\n\r\n    /**\r\n     * Adds a new item in the tail of linked list\r\n     * \r\n     * @param {any} itemValue Item to be added\r\n     * @returns {void} \r\n     * @memberof _LinkedList\r\n     */\r\n    addItem(itemValue) {\r\n      let newNode = new LinkedListNode();\r\n      newNode.data = itemValue;\r\n      newNode.next = null;\r\n\r\n      if (_start == null) {\r\n        _start = newNode;\r\n      } else {\r\n        _last.next = newNode;\r\n      }\r\n      _last = newNode;\r\n      _length++;\r\n    }\r\n\r\n    /**\r\n     * Adds an item at the head of the linked list\r\n     * \r\n     * @param {any} itemValue Item to be added\r\n     * @returns {void}\r\n     * @memberof _LinkedList\r\n     */\r\n    addItemAtStart(itemValue) {\r\n      let newNode = new LinkedListNode();\r\n      newNode.data = itemValue;\r\n      newNode.next = null;\r\n\r\n      if (_start == null) {\r\n        _start = newNode;\r\n        _last = newNode;\r\n      } else {\r\n        newNode.next = _start;\r\n        _start = newNode;\r\n      }\r\n      _length++;\r\n    }\r\n\r\n    /**\r\n     * Adds an item in the linked list at the given index\r\n     * \r\n     * @param {number} index Index\r\n     * @param {any} data Item to be added\r\n     * @returns {void}\r\n     * @memberof _LinkedList\r\n     */\r\n    addItemAtIndex(index, data) {\r\n      if (index > _length) {\r\n        throw new Error('Index greater than the length of List');\r\n      } else if (index == _length) {\r\n        this.addItem(data);\r\n      } else if (index == 0) {\r\n        this.addItemAtStart(data);\r\n      } else {\r\n        let newNode = new LinkedListNode();\r\n        newNode.data = data;\r\n        newNode.next = null;\r\n        let currentNode = _start;\r\n        let currentIndex = 0;\r\n        while (currentIndex < index - 1) {\r\n          currentNode = currentNode.next;\r\n          currentIndex++;\r\n        }\r\n        let nextNode = currentNode.next;\r\n        currentNode.next = newNode;\r\n        newNode.next = nextNode;\r\n        _length++;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Gets the last item of the linked list\r\n     * \r\n     * @returns {any} The last item\r\n     * @memberof _LinkedList\r\n     */\r\n    getLastItem() {\r\n      return _last && _last.data;\r\n    }\r\n\r\n    /**\r\n     * Gets the first item of the linked list\r\n     * \r\n     * @returns {any} The first item\r\n     * @memberof _LinkedList\r\n     */\r\n    getFirstItem() {\r\n      return _start && _start.data;\r\n    }\r\n\r\n    /**\r\n     * Gets an item from the linked list at the given index\r\n     * \r\n     * @param {number} index Index\r\n     * @returns {any} The item\r\n     * @memberof _LinkedList\r\n     */\r\n    getItemAtIndex(index) {\r\n      if (index >= _length) {\r\n        throw new Error('Index greater than the length of List');\r\n      }\r\n      if (index == _length - 1) {\r\n        return this.getLastItem();\r\n      }\r\n      if (index == 0) {\r\n        return this.getFirstItem();\r\n      }\r\n      let currentNode = _start;\r\n      let currentIndex = 0;\r\n      while (currentIndex < index) {\r\n        currentNode = currentNode.next;\r\n        currentIndex++;\r\n      }\r\n      return currentNode.data;\r\n    }\r\n\r\n    /**\r\n     * Removes the first item from the linked list\r\n     * \r\n     * @returns {void}\r\n     * @memberof _LinkedList\r\n     */\r\n    removeFirstItem() {\r\n      if (_start == null) {\r\n        throw new Error('Cannot remove element from an empty List');\r\n      }\r\n      if (_length == 1) {\r\n        _start = _last = null;\r\n        _length = 0;\r\n      } else {\r\n        _start = _start.next;\r\n        _length--;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Removes the last item from the linked list\r\n     * \r\n     * @returns {void}\r\n     * @memberof _LinkedList\r\n     */\r\n    removeLastItem() {\r\n      this.removeItemAtIndex(_length - 1);\r\n    }\r\n\r\n    /**\r\n     * Removes an item at the given index of linked list\r\n     * \r\n     * @param {number} index \r\n     * @returns {void}\r\n     * @memberof _LinkedList\r\n     */\r\n    removeItemAtIndex(index) {\r\n      if (index >= _length) {\r\n        throw new Error('Index greater than the length of List');\r\n      }\r\n      if (index == 0) {\r\n        this.removeFirstItem();\r\n      } else {\r\n        let currentNode = _start;\r\n        let currentIndex = 0;\r\n        while (currentIndex < index - 1) {\r\n          currentNode = currentNode.next;\r\n          currentIndex++;\r\n        }\r\n        let deleteNode = currentNode.next;\r\n        currentNode.next = deleteNode.next;\r\n        if (index == _length - 1) {\r\n          _last = currentNode;\r\n        }\r\n        _length--;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Updates an item of the linked list\r\n     * \r\n     * @param {number} index The index\r\n     * @param {any} value New value\r\n     * @returns {void}\r\n     * @memberof _LinkedList\r\n     */\r\n    updateItem(index, value) {\r\n      if (index >= _length) {\r\n        throw new Error('Index greater than the length of List');\r\n      }\r\n      let currentNode = _start;\r\n      let currentIndex = 0;\r\n      while (currentIndex < index) {\r\n        currentNode = currentNode.next;\r\n        currentIndex++;\r\n      }\r\n      currentNode.data = value;\r\n    }\r\n\r\n    /**\r\n     * Map function for the linked list\r\n     * \r\n     * @param {Function} callback \r\n     * @returns {void}\r\n     * @memberof _LinkedList\r\n     */\r\n    map(callback) {\r\n      let currentNode = _start;\r\n      let index = 0;\r\n      while (currentNode !== null) {\r\n        if (callback.length == 2) {\r\n          callback(index, currentNode.data);\r\n        } else {\r\n          callback(currentNode.data);\r\n        }\r\n        currentNode = currentNode.next;\r\n        index++;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns the linked list in the form of an array\r\n     * \r\n     * @returns {any[]} The linked list as an array\r\n     * @memberof _LinkedList\r\n     */\r\n    toArray() {\r\n      let listArray = [];\r\n      this.map((value) => {\r\n        listArray.push(value);\r\n      })\r\n      return listArray;\r\n    }\r\n  }\r\n  return _LinkedList;\r\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/LinkedList.js","export { LinkedList } from './LinkedList';\r\nexport { QueueList } from './QueueList';\r\nexport { StackList } from './StackList';\r\nexport { Set } from './HashSet';\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { Node } from './DsNode';\r\n\r\n/**\r\n * LinkedListNode class\r\n * \r\n * @export\r\n * @class LinkedListNode\r\n * @extends {Node}\r\n */\r\nexport class LinkedListNode extends Node {\r\n  /**\r\n   * Creates an instance of LinkedListNode.\r\n   * @memberof LinkedListNode\r\n   */\r\n  constructor() {\r\n    super();\r\n    this.next = null;\r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/common/LinkedListNode.js","/**\r\n * Node class\r\n * \r\n * @export\r\n * @class Node\r\n */\r\nexport class Node {\r\n  /**\r\n   * Creates an instance of Node.\r\n   * @memberof Node\r\n   */\r\n  constructor() {\r\n    this.data = null;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/DsNode.js","import { LinkedList } from './LinkedList';\r\n\r\n/**\r\n * QueueList class\r\n * \r\n * @export\r\n * @class QueueList\r\n */\r\nexport class QueueList {\r\n  /**\r\n   * Creates an instance of QueueList.\r\n   * @memberof QueueList\r\n   */\r\n  constructor() {\r\n    this.list = new LinkedList();\r\n  }\r\n\r\n  /**\r\n   * The length of queue\r\n   * \r\n   * @readonly\r\n   * @memberof QueueList\r\n   */\r\n  get length() {\r\n    return this.list.length;\r\n  }\r\n\r\n  /**\r\n   * Inserts an element in the tail of queue\r\n   * \r\n   * @param {any} item \r\n   * @returns {void}\r\n   * @memberof QueueList\r\n   */\r\n  enqueue(item) {\r\n    this.list.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * Removes an element from the head of queue\r\n   * \r\n   * @returns {any} The Head of queue\r\n   * @memberof QueueList\r\n   */\r\n  dequeue() {\r\n    if (!this.isEmpty()) {\r\n      return this.list.removeFirstItem();\r\n    } else {\r\n      throw new Error('Cannot perform the dequeue operation, the Queue is empty');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if the queue is empty\r\n   * \r\n   * @returns {boolean} True if queue is empty, false otherwise\r\n   * @memberof QueueList\r\n   */\r\n  isEmpty() {\r\n    return this.list.length == 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the head element of queue, without removing it\r\n   * \r\n   * @returns {any} The head element of queue\r\n   * @memberof QueueList\r\n   */\r\n  peek() {\r\n    return this.list.getFirstItem();\r\n  }\r\n\r\n  /**\r\n   * Map function on the queue used to iterate each element\r\n   * \r\n   * @param {Function} callback \r\n   * @returns {void}\r\n   * @memberof QueueList\r\n   */\r\n  map(callback) {\r\n    this.list.map(callback);\r\n  }\r\n\r\n  /**\r\n   * Returns the queue in the form of an array\r\n   * \r\n   * @returns {any[]} The queue in array form\r\n   * @memberof QueueList\r\n   */\r\n  toArray() {\r\n    return this.list.toArray();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/QueueList.js","import { LinkedList } from './LinkedList';\r\n\r\n/**\r\n * StackList Class\r\n * \r\n * @export\r\n * @class StackList\r\n */\r\nexport class StackList {\r\n  /**\r\n   * Creates an instance of StackList.\r\n   * @memberof StackList\r\n   */\r\n  constructor() {\r\n    this.list = new LinkedList();\r\n  }\r\n\r\n  /**\r\n   * The length of the Stack\r\n   * \r\n   * @readonly\r\n   * @memberof StackList\r\n   */\r\n  get length() {\r\n    return this.list.length;\r\n  }\r\n\r\n  /**\r\n   * Adds an item into the stack, performs push operation on stack\r\n   * \r\n   * @param {any} item\tItem to push into stack\r\n   * @returns {void}\r\n   * @memberof StackList\r\n   */\r\n  push(item) {\r\n    this.list.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * Removes the top item from the stack, performs pop operation on stack\r\n   * \r\n   * @returns {any}\tThe top element of stack\r\n   * @memberof StackList\r\n   */\r\n  pop() {\r\n    if (!this.isEmpty()) {\r\n      let popElement = this.list.getLastItem();\r\n      this.list.removeLastItem();\r\n      return popElement;\r\n    }\r\n    throw new Error('Cannot perform the pop operation, the stack is empty')\r\n  }\r\n\r\n  /**\r\n   * Returns the top element of the stack\r\n   * \r\n   * @returns {any} The top element of stack\r\n   * @memberof StackList\r\n   */\r\n  peek() {\r\n    return this.list.getLastItem();\r\n  }\r\n\r\n  /**\r\n   * Checks if the stack is empty\r\n   * \r\n   * @returns {boolean} True if stack is empty, false otherwise\r\n   * @memberof StackList\r\n   */\r\n  isEmpty() {\r\n    return this.list.length == 0;\r\n  }\r\n\r\n  /**\r\n   * Map function on the stack used to iterate each element\r\n   * \r\n   * @param {Function} callback \r\n   * @returns {void} \r\n   * @memberof StackList\r\n   */\r\n  map(callback) {\r\n    this.list.map(callback);\r\n  }\r\n\r\n  /**\r\n   * Returns the stack as an array\r\n   * \r\n   * @returns {any[]} \r\n   * @memberof StackList\r\n   */\r\n  toArray() {\r\n    return this.list.toArray();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/StackList.js","export function Set() {\r\n\tvar set = {};\r\n\tthis.add = function (element) {\r\n\t\tif (set[element] != undefined || typeof element == \"undefined\" || typeof element == \"function\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (typeof element == \"object\" && element != null) {\r\n\t\t\tset[JSON.stringify(element)] = \"object\";\r\n\t\t}\r\n\t\telse\r\n\t\t\tset[element] = typeof element;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tthis.testSet = function () {\r\n\t\treturn set;\r\n\t}\r\n\r\n\tthis.remove = function (element) {\r\n\t\tif (typeof element == \"object\" && element != null) {\r\n\t\t\telement = JSON.stringify(element)\r\n\t\t}\r\n\t\telse if (typeof set[element] == \"undefined\" || typeof element == \"undefined\" || typeof element == \"function\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tdelete set[element];\r\n\t\treturn true;\r\n\t}\r\n\r\n\tthis.contains = function (element) {\r\n\t\tif (typeof set[element] == \"undefined\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tthis.toArray = function () {\r\n\t\tvar setArray = [];\r\n\t\tfor (var i in set) {\r\n\t\t\tvar iConverted = null;\r\n\t\t\tswitch (set[i]) {\r\n\t\t\t\tcase \"number\":\r\n\t\t\t\t\tiConverted = Number(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tiConverted = String(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tiConverted = Boolean(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\tiConverted = JSON.parse(i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tsetArray.push(iConverted);\r\n\t\t}\r\n\t\treturn setArray;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/HashSet.js"],"sourceRoot":""}